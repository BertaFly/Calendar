{"version":3,"sources":["constants/dateTimeFormats.js","utils/index.js","constants/initialEvents.js","constants/calendarFormats.js","components/Modal.jsx","constants/eventOptions.js","components/Select.jsx","pages/calendar/components/CreateEventForm.jsx","pages/calendar/components/EditEventForm.jsx","pages/calendar/components/WeekHeader.jsx","pages/calendar/BigCalendar.jsx","pages/indexPage/App.jsx","index.js"],"names":["DATE_TIME","UIDv4","a","Math","random","toString","replace","formatDateForList","date","time","startOrEnd","moment","set","hour","split","substring","minute","_d","formatDateOnCreateEvent","initialEvents","id","title","start","add","end","type","allDay","notes","startOf","endOf","calendarFormats","dateFormat","dayFormat","Modal","top","left","onClose","children","className","style","onClick","onKeyPress","role","tabIndex","defaultProps","eventOptions","name","Select","placeholder","options","onSelect","isError","onBlur","errorText","value","useState","isOpen","setIsOpen","selectOption","option","map","key","CreateEventForm","onCancel","onSubmit","initialValues","format","color","onChange","formikMethod","length","test","validate","values","errors","isBefore","actions","setSubmitting","render","handleBlur","setFieldValue","touched","isSubmitting","submitForm","isValid","setTouched","event","target","Boolean","disabled","EditEventForm","eventInfo","WeekHeader","localizer","momentLocalizer","BigCalendar","createModalOpen","setCreateModalOpen","editModalOpen","setEditModalOpen","eventList","setEventList","selectedSlot","setSelectedSlot","eventToEdit","setEventToEdit","editModalOffset","setEditModalOffset","currentView","setCurrentView","useEffect","DraggableCalendar","withDragAndDrop","Calendar","formats","events","startAccessor","endAccessor","showMultiDayTimes","eventPropGetter","components","week","timeGutterHeader","onSelectSlot","slot","undefined","selectable","onSelectEvent","e","pageY","pageX","draggableAccessor","resizableAccessor","onEventDrop","eventDragged","previousEvents","filter","view","onView","box","y","bounds","bottom","x","formValues","App","root","document","getElementById","ReactDOM"],"mappings":"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","file":"static/js/main.c48270e6.chunk.js","sourcesContent":["export const FORM_DATE = 'DD/MM/YYYY';\nexport const FORM_TIME = 'HH:mm';\nexport const DATE_TIME = `${FORM_DATE} ${FORM_TIME}`;\nexport const DATE_WITHOUT_ZERO = 'D';\nexport const WEEK_DAY_SHORT_DATE_MONTH = 'ddd DD/MM';\nexport const EVENT_DISPLAY_TIME = 'HH:MM';\n","/* eslint-disable no-bitwise */\nimport moment from 'moment';\n\nimport {FORM_DATE, DATE_TIME} from 'constants/dateTimeFormats';\n\n/**\n * Returns unique id\n * @param {*} a\n */\nexport const UIDv4 = a =>\n  a\n    ? (a ^ ((Math.random() * 16) >> (a / 4))).toString(16)\n    : ([1e7] + -1e3 + -4e3 + -8e3 + -1e11).replace(/[018]/g, UIDv4);\n\n/**\n * @param {Date} date - event date, only one day event allowed\n * @param {string} [time=20:30 - 23:59] - event is happening within this time range\n * @param {string} [startOrEnd=start | end] - start or end of event range\n * Return Date for event list item\n */\nexport const formatDateForList = (date, time, startOrEnd) => {\n  if (startOrEnd === 'start') {\n    return moment(date, FORM_DATE).set({\n      hour: time.split(' - ')[0].substring(0, 2),\n      minute: time.split(' - ')[0].substring(3),\n    })._d;\n  }\n\n  return moment(date, FORM_DATE).set({\n    hour: time.split(' - ')[1].substring(0, 2),\n    minute: time.split(' - ')[1].substring(3),\n  })._d;\n};\n\n/**\n * Return Date for event list item\n * @param {Date} date - event date, only one day event allowed\n * @param {string} time\n * @param {string} [startOrEnd=start | end] - start or end of event range\n */\nexport const formatDateOnCreateEvent = (date, time, startOrEnd) => {\n  return moment(\n    `${date} ${time.split(' - ')[startOrEnd === 'start' ? 0 : 1]}`,\n    DATE_TIME,\n  )._d;\n};\n","import moment from 'moment';\n\nimport {UIDv4} from 'utils';\n\nconst initialEvents = [\n  {\n    id: UIDv4(),\n    title: \"Mama's Bithday\",\n    start: moment().add(1, 'days')._d,\n    end: moment().add(1, 'days')._d,\n    type: 'birthday',\n    allDay: true,\n    notes: 'Send flowers',\n  },\n  {\n    id: UIDv4(),\n    title: 'Check schedule',\n    start: moment().startOf('hour')._d,\n    end: moment().endOf('hour')._d,\n    type: 'personal',\n    notes: '💪 More gym 💪',\n  },\n  {\n    id: UIDv4(),\n    title: 'Drink water',\n    start: moment().set({\n      hour: 15,\n      minute: 30,\n    })._d,\n    end: moment().set({\n      hour: 16,\n      minute: 30,\n    })._d,\n    type: 'reminder',\n    notes: 'At least a glass.',\n  },\n  {\n    id: UIDv4(),\n    title: 'Grooming',\n    start: moment()\n      .add(3, 'days')\n      .set({\n        hour: 11,\n        minute: 0,\n      })._d,\n    end: moment()\n      .add(3, 'days')\n      .set({\n        hour: 12,\n        minute: 30,\n      })._d,\n    type: 'meeting',\n    notes: 'Pay attention',\n  },\n];\n\nexport default initialEvents;\n","import {DATE_WITHOUT_ZERO, WEEK_DAY_SHORT_DATE_MONTH} from './dateTimeFormats';\n\nconst calendarFormats = {\n  dateFormat: DATE_WITHOUT_ZERO,\n  dayFormat: WEEK_DAY_SHORT_DATE_MONTH,\n};\n\nexport default calendarFormats;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport 'styles/modal.scss';\n\nconst Modal = ({top, left, onClose, children}) => (\n  <div\n    className=\"modal-container\"\n    style={{\n      top,\n      left: left - 63,\n    }}\n  >\n    <div className=\"modal-content\">\n      <div\n        className=\"close\"\n        onClick={onClose}\n        onKeyPress={onClose}\n        role=\"button\"\n        tabIndex=\"0\"\n      >\n        <i className=\"fa fa-times-circle\" />\n      </div>\n      {children}\n    </div>\n  </div>\n);\n\nModal.defaultProps = {\n  children: null,\n};\n\nModal.propTypes = {\n  top: PropTypes.number.isRequired,\n  left: PropTypes.number.isRequired,\n  onClose: PropTypes.func.isRequired,\n  children: PropTypes.element,\n};\n\nexport default Modal;\n","const eventOptions = [\n  {\n    id: 'birthday',\n    name: 'birthday',\n  },\n  {\n    id: 'personal',\n    name: 'personal',\n  },\n  {\n    id: 'reminder',\n    name: 'reminder',\n  },\n  {\n    id: 'meeting',\n    name: 'meeting',\n  },\n];\n\nexport default eventOptions;\n","import React, {useState} from 'react';\nimport PropTypes from 'prop-types';\n\nimport 'styles/select.scss';\n\nconst Select = ({\n  placeholder,\n  options,\n  onSelect,\n  isError,\n  onBlur,\n  errorText,\n  value,\n}) => {\n  const [isOpen, setIsOpen] = useState(false);\n\n  const selectOption = option => {\n    setIsOpen(false);\n    onSelect(option);\n  };\n\n  return (\n    <div className=\"select-container\">\n      <button\n        type=\"button\"\n        onClick={() => (isOpen ? setIsOpen(false) : setIsOpen(true))}\n        className={`select-button ${isError ? 'border-error' : ''} ${\n          value ? 'text-black' : ''\n        }`}\n        onBlur={onBlur}\n      >\n        {value || placeholder}\n      </button>\n      {isOpen && (\n        <div className=\"select-options\">\n          {options.map(option => (\n            <div\n              key={option.id}\n              onClick={() => selectOption(option)}\n              className=\"option\"\n              onKeyPress={() => selectOption(option)}\n              tabIndex=\"0\"\n              role=\"button\"\n            >\n              <span className={`color-indicator event-${option.id}`} />\n              <span\n                className={`${option.id === placeholder ? 'text-bold' : ''}`}\n              >\n                {option.name}\n              </span>\n            </div>\n          ))}\n        </div>\n      )}\n      {errorText ? <span className=\"text-error\">{errorText}</span> : null}\n    </div>\n  );\n};\n\nSelect.defaultProps = {\n  isError: false,\n  onBlur: () => {},\n  errorText: '',\n  value: '',\n};\n\nSelect.propTypes = {\n  placeholder: PropTypes.string.isRequired,\n  options: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string,\n      name: PropTypes.string,\n    }),\n  ).isRequired,\n  onSelect: PropTypes.func.isRequired,\n  isError: PropTypes.bool,\n  onBlur: PropTypes.func,\n  errorText: PropTypes.string,\n  value: PropTypes.string,\n};\n\nexport default Select;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport moment from 'moment';\nimport {Formik} from 'formik';\n\nimport eventOptions from 'constants/eventOptions';\nimport {FORM_DATE, FORM_TIME} from 'constants/dateTimeFormats';\n\nimport Select from 'components/Select';\n\nconst CreateEventForm = ({start, end, onCancel, onSubmit}) => {\n  const initialValues = {\n    title: '',\n    date: moment(start).format(FORM_DATE),\n    time: `${moment(start).format(FORM_TIME)} - ${moment(end).format(\n      FORM_TIME,\n    )}`,\n    notes: '',\n    color: '',\n  };\n\n  const onChange = ({name, value}, formikMethod) => {\n    if (value.length < 31) {\n      if (\n        name === 'notes' ||\n        name === 'title' ||\n        (name === 'time' && /^[0-9:-\\s]*$/.test(value))\n      ) {\n        formikMethod(name, value);\n      }\n      if (name === 'date' && /^[0-9/]*$/.test(value)) {\n        formikMethod(name, value);\n      }\n    }\n  };\n\n  return (\n    <Formik\n      initialValues={initialValues}\n      validate={values => {\n        let errors = {};\n        if (values.title === '') {\n          errors = {...errors, title: 'Title is required'};\n        }\n        if (values.date === '') {\n          errors = {...errors, date: 'Date is required'};\n        }\n        if (values.date && moment(values.date, FORM_DATE).isBefore()) {\n          errors = {...errors, date: 'Date should be in future'};\n        }\n        if (values.time === '') {\n          errors = {...errors, time: 'Time is required'};\n        }\n        if (values.notes === '') {\n          errors = {...errors, notes: 'Notes is required'};\n        }\n        if (values.color === '') {\n          errors = {...errors, color: 'Color is required'};\n        }\n        return errors;\n      }}\n      onSubmit={(values, actions) => {\n        actions.setSubmitting(false);\n        onSubmit(values);\n      }}\n      render={({\n        values,\n        handleBlur,\n        setFieldValue,\n        errors,\n        touched,\n        isSubmitting,\n        submitForm,\n        isValid,\n        setTouched,\n      }) => (\n        <form onSubmit={submitForm}>\n          <div className=\"input-group\">\n            <div className=\"input-container\">\n              <span>event title *</span>\n              <input\n                type=\"text\"\n                name=\"title\"\n                value={values.title}\n                onChange={event => {\n                  onChange(event.target, setFieldValue);\n                }}\n                onBlur={handleBlur}\n                className={`${\n                  touched.title && errors.title ? 'error-input' : ''\n                }`}\n              />\n              {touched.title && errors.title && (\n                <span className=\"text-error\">{errors.title}</span>\n              )}\n            </div>\n          </div>\n\n          <div className=\"input-group\">\n            <div className=\"input-container\">\n              <span>event date *</span>\n              <input\n                type=\"text\"\n                name=\"date\"\n                value={values.date}\n                onChange={event => {\n                  onChange(event.target, setFieldValue);\n                }}\n                onBlur={handleBlur}\n                className={`${\n                  touched.date && errors.date ? 'error-input' : ''\n                }`}\n              />\n              {touched.date && errors.date && (\n                <span className=\"text-error\">{errors.date}</span>\n              )}\n            </div>\n            <div\n              className={`icon-container ${\n                touched.date && errors.date ? 'error-input' : ''\n              }`}\n            >\n              <i className=\"far fa-calendar-alt\" />\n            </div>\n          </div>\n\n          <div className=\"input-group\">\n            <div className=\"input-container\">\n              <span>event time *</span>\n              <input\n                type=\"text\"\n                name=\"time\"\n                value={values.time}\n                onChange={event => {\n                  onChange(event.target, setFieldValue);\n                }}\n                onBlur={handleBlur}\n                className={`${\n                  touched.time && errors.time ? 'error-input' : ''\n                }`}\n              />\n              {touched.time && errors.time && (\n                <span className=\"text-error\">{errors.time}</span>\n              )}\n            </div>\n            <div\n              className={`icon-container ${\n                touched.time && errors.time ? 'error-input' : ''\n              }`}\n            >\n              <i className=\"far fa-clock\" />\n            </div>\n          </div>\n\n          <div className=\"input-group\">\n            <div className=\"input-container\">\n              <span>notes *</span>\n              <input\n                type=\"text\"\n                name=\"notes\"\n                value={values.notes}\n                onChange={event => {\n                  onChange(event.target, setFieldValue);\n                }}\n                onBlur={handleBlur}\n                className={`${\n                  touched.notes && errors.notes ? 'error-input' : ''\n                }`}\n              />\n              {touched.notes && errors.notes && (\n                <span className=\"text-error\">{errors.notes}</span>\n              )}\n            </div>\n          </div>\n\n          <div className=\"input-group\">\n            <Select\n              placeholder=\"color\"\n              value={values.color}\n              options={eventOptions}\n              onSelect={option => setFieldValue('color', option.id)}\n              isError={Boolean(touched.color) && Boolean(errors.color)}\n              onBlur={() => {\n                setTouched({\n                  ...touched,\n                  color: true,\n                });\n              }}\n              errorText={touched.color && errors.color ? errors.color : ''}\n            />\n          </div>\n\n          <div className=\"button-group\">\n            <button onClick={onCancel} type=\"button\">\n              Cancel\n            </button>\n            <button\n              onClick={submitForm}\n              type=\"button\"\n              disabled={isSubmitting || !isValid}\n            >\n              Save\n            </button>\n          </div>\n        </form>\n      )}\n    />\n  );\n};\n\nCreateEventForm.propTypes = {\n  start: PropTypes.instanceOf(Date).isRequired,\n  end: PropTypes.instanceOf(Date).isRequired,\n  onCancel: PropTypes.func.isRequired,\n  onSubmit: PropTypes.func.isRequired,\n};\n\nexport default CreateEventForm;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport moment from 'moment';\nimport {Formik} from 'formik';\n\nimport eventOptions from 'constants/eventOptions';\nimport {FORM_DATE, FORM_TIME} from 'constants/dateTimeFormats';\n\nimport Select from 'components/Select';\n\nconst EditEventForm = ({eventInfo, onCancel, onSubmit}) => {\n  const initialValues = {\n    title: eventInfo.title,\n    date: moment(eventInfo.start).format(FORM_DATE),\n    time: `${moment(eventInfo.start).format(FORM_TIME)} - ${moment(\n      eventInfo.end,\n    ).format(FORM_TIME)}`,\n    notes: eventInfo.notes,\n    color: eventInfo.type,\n    id: eventInfo.id,\n  };\n\n  const onChange = ({name, value}, formikMethod) => {\n    if (value.length < 31) {\n      if (\n        name === 'notes' ||\n        name === 'title' ||\n        (name === 'time' && /^[0-9:-\\s]*$/.test(value))\n      ) {\n        formikMethod(name, value);\n      }\n      if (name === 'date' && /^[0-9/]*$/.test(value)) {\n        formikMethod(name, value);\n      }\n    }\n  };\n\n  return (\n    <Formik\n      initialValues={initialValues}\n      validate={values => {\n        let errors = {};\n        if (values.title === '') {\n          errors = {...errors, title: 'Title is required'};\n        }\n        if (values.date === '') {\n          errors = {...errors, date: 'Date is required'};\n        }\n        if (values.time === '') {\n          errors = {...errors, time: 'Time is required'};\n        }\n        if (values.notes === '') {\n          errors = {...errors, notes: 'Notes is required'};\n        }\n        if (values.color === '') {\n          errors = {...errors, color: 'Color is required'};\n        }\n        return errors;\n      }}\n      onSubmit={(values, actions) => {\n        actions.setSubmitting(false);\n        onSubmit(values);\n      }}\n      render={({\n        values,\n        handleBlur,\n        setFieldValue,\n        errors,\n        touched,\n        isSubmitting,\n        submitForm,\n        isValid,\n        setTouched,\n      }) => (\n        <form onSubmit={submitForm}>\n          <div className=\"input-group\">\n            <div className=\"input-container\">\n              <span>event title *</span>\n              <input\n                type=\"text\"\n                name=\"title\"\n                value={values.title}\n                onChange={event => {\n                  onChange(event.target, setFieldValue);\n                }}\n                onBlur={handleBlur}\n                className={`${\n                  touched.title && errors.title ? 'error-input' : ''\n                }`}\n              />\n              {touched.title && errors.title && (\n                <span className=\"text-error\">{errors.title}</span>\n              )}\n            </div>\n          </div>\n\n          <div className=\"input-group\">\n            <div className=\"input-container\">\n              <span>event date *</span>\n              <input\n                type=\"text\"\n                name=\"date\"\n                value={values.date}\n                onChange={event => {\n                  onChange(event.target, setFieldValue);\n                }}\n                onBlur={handleBlur}\n                className={`${\n                  touched.date && errors.date ? 'error-input' : ''\n                }`}\n              />\n              {touched.date && errors.date && (\n                <span className=\"text-error\">{errors.date}</span>\n              )}\n            </div>\n            <div\n              className={`icon-container ${\n                touched.date && errors.date ? 'error-input' : ''\n              }`}\n            >\n              <i className=\"far fa-calendar-alt\" />\n            </div>\n          </div>\n\n          <div className=\"input-group\">\n            <div className=\"input-container\">\n              <span>event time *</span>\n              <input\n                type=\"text\"\n                name=\"time\"\n                value={values.time}\n                onChange={event => {\n                  onChange(event.target, setFieldValue);\n                }}\n                onBlur={handleBlur}\n                className={`${\n                  touched.time && errors.time ? 'error-input' : ''\n                }`}\n              />\n              {touched.time && errors.time && (\n                <span className=\"text-error\">{errors.time}</span>\n              )}\n            </div>\n            <div\n              className={`icon-container ${\n                touched.time && errors.time ? 'error-input' : ''\n              }`}\n            >\n              <i className=\"far fa-clock\" />\n            </div>\n          </div>\n\n          <div className=\"input-group\">\n            <div className=\"input-container\">\n              <span>notes *</span>\n              <input\n                type=\"text\"\n                name=\"notes\"\n                value={values.notes}\n                onChange={event => {\n                  onChange(event.target, setFieldValue);\n                }}\n                onBlur={handleBlur}\n                className={`${\n                  touched.notes && errors.notes ? 'error-input' : ''\n                }`}\n              />\n              {touched.notes && errors.notes && (\n                <span className=\"text-error\">{errors.notes}</span>\n              )}\n            </div>\n          </div>\n\n          <div className=\"input-group\">\n            <Select\n              placeholder=\"color\"\n              value={values.color}\n              options={eventOptions}\n              onSelect={option => setFieldValue('color', option.id)}\n              isError={Boolean(touched.color) && Boolean(errors.color)}\n              onBlur={() => {\n                setTouched({\n                  ...touched,\n                  color: true,\n                });\n              }}\n              errorText={touched.color && errors.color ? errors.color : ''}\n            />\n          </div>\n\n          <div className=\"button-group\">\n            <button onClick={onCancel} type=\"button\">\n              Discard\n            </button>\n            <button\n              onClick={submitForm}\n              type=\"button\"\n              disabled={isSubmitting || !isValid}\n            >\n              Edit\n            </button>\n          </div>\n        </form>\n      )}\n    />\n  );\n};\n\nEditEventForm.propTypes = {\n  eventInfo: PropTypes.shape({\n    id: PropTypes.string,\n    title: PropTypes.string,\n    notes: PropTypes.string,\n    type: PropTypes.string,\n    start: PropTypes.instanceOf(Date),\n    end: PropTypes.instanceOf(Date),\n  }).isRequired,\n  onCancel: PropTypes.func.isRequired,\n  onSubmit: PropTypes.func.isRequired,\n};\n\nexport default EditEventForm;\n","import React from 'react';\n\nconst WeekHeader = () => (\n  <div className=\"time-gutter-week\">\n    <div />\n    <div className=\"time-gutter-all-day-label\">all day</div>\n  </div>\n);\n\nexport default WeekHeader;\n","import React, {useState, useEffect} from 'react';\nimport {Calendar, momentLocalizer} from 'react-big-calendar';\nimport withDragAndDrop from 'react-big-calendar/lib/addons/dragAndDrop';\nimport 'react-big-calendar/lib/css/react-big-calendar.css';\nimport 'react-big-calendar/lib/addons/dragAndDrop/styles.css';\nimport moment from 'moment';\n\nimport {UIDv4, formatDateForList, formatDateOnCreateEvent} from 'utils';\n\nimport initialEvents from 'constants/initialEvents';\nimport calendarFormats from 'constants/calendarFormats';\n\nimport Modal from 'components/Modal';\n\nimport 'styles/calendar.scss';\n\nimport {CreateEventForm, EditEventForm, WeekHeader} from './components';\n\nconst localizer = momentLocalizer(moment);\n\nconst BigCalendar = () => {\n  const [createModalOpen, setCreateModalOpen] = useState(false);\n  const [editModalOpen, setEditModalOpen] = useState(false);\n\n  const [eventList, setEventList] = useState(initialEvents);\n  const [selectedSlot, setSelectedSlot] = useState();\n  const [eventToEdit, setEventToEdit] = useState();\n  const [editModalOffset, setEditModalOffset] = useState({top: 0, left: 0});\n  const [currentView, setCurrentView] = useState('month');\n\n  useEffect(() => {\n    setCreateModalOpen(true);\n    setEditModalOpen(false);\n  }, [selectedSlot]);\n\n  useEffect(() => {\n    setEditModalOpen(true);\n    setCreateModalOpen(false);\n  }, [eventToEdit]);\n\n  const handleCreate = formValues => {\n    setEventList([\n      ...eventList,\n      {\n        id: UIDv4(),\n        title: formValues.title,\n        start: formatDateOnCreateEvent(\n          formValues.date,\n          formValues.time,\n          'start',\n        ),\n        end: formatDateOnCreateEvent(formValues.date, formValues.time, 'end'),\n        type: formValues.color,\n        notes: formValues.notes,\n      },\n    ]);\n    setCreateModalOpen(false);\n  };\n\n  const handleEdit = formValues => {\n    const previousEvents = eventList.filter(\n      event => event.id !== formValues.id,\n    );\n    const {date, time} = formValues;\n\n    setEventList([\n      ...previousEvents,\n      {\n        id: formValues.id,\n        title: formValues.title,\n        start: formatDateForList(date, time, 'start'),\n        end: formatDateForList(date, time, 'end'),\n        type: formValues.color,\n        notes: formValues.notes,\n      },\n    ]);\n    setEditModalOpen(false);\n  };\n\n  const removeEvent = () => {\n    setEventList(eventList.filter(event => event.id !== eventToEdit.id));\n    setEditModalOpen(false);\n  };\n\n  const DraggableCalendar = withDragAndDrop(Calendar);\n\n  const handleDropEvent = eventDragged => {\n    if (!moment(eventDragged.start).isBefore()) {\n      const previousEvents = eventList.filter(\n        event => event.id !== eventDragged.event.id,\n      );\n      setEventList([\n        ...previousEvents,\n        {\n          ...eventDragged.event,\n          start: eventDragged.start,\n          end: eventDragged.end,\n        },\n      ]);\n    }\n  };\n\n  return (\n    <div className=\"calendar-container\">\n      <DraggableCalendar\n        formats={calendarFormats}\n        localizer={localizer}\n        events={eventList}\n        startAccessor=\"start\"\n        endAccessor=\"end\"\n        showMultiDayTimes\n        eventPropGetter={event => ({\n          className: `event-${event.type}`,\n        })}\n        components={{\n          week: {\n            timeGutterHeader: WeekHeader,\n          },\n        }}\n        onSelectSlot={slot => {\n          if (createModalOpen) {\n            setCreateModalOpen(false);\n          } else if (!editModalOpen) {\n            return !moment(slot.start).isBefore()\n              ? setSelectedSlot(slot)\n              : false;\n          } else {\n            setEventToEdit(undefined);\n            setEditModalOpen(false);\n          }\n          return true;\n        }}\n        selectable\n        onSelectEvent={(event, e) => {\n          setEventToEdit(event);\n          setEditModalOffset({top: e.pageY + 10, left: e.pageX});\n        }}\n        draggableAccessor={() => true}\n        resizableAccessor={() => false}\n        onEventDrop={handleDropEvent}\n        view={currentView}\n        onView={view => {\n          setEventToEdit(undefined);\n          setCurrentView(view);\n          setEditModalOpen(false);\n          setCreateModalOpen(false);\n        }}\n      />\n      {createModalOpen && selectedSlot ? (\n        <Modal\n          top={\n            (selectedSlot.box && selectedSlot.box.y) ||\n            (selectedSlot.bounds && selectedSlot.bounds.bottom)\n          }\n          left={\n            (selectedSlot.box && selectedSlot.box.x) ||\n            (selectedSlot.bounds && selectedSlot.bounds.left)\n          }\n          onClose={() => setCreateModalOpen(false)}\n        >\n          <CreateEventForm\n            start={selectedSlot.start}\n            end={selectedSlot.end}\n            onCancel={() => setCreateModalOpen(false)}\n            onSubmit={handleCreate}\n          />\n        </Modal>\n      ) : null}\n      {editModalOpen && eventToEdit ? (\n        <Modal\n          top={editModalOffset.top}\n          left={editModalOffset.left}\n          onClose={() => {\n            setEventToEdit(undefined);\n            setEditModalOpen(false);\n          }}\n        >\n          <EditEventForm\n            eventInfo={eventToEdit}\n            onCancel={removeEvent}\n            onSubmit={handleEdit}\n          />\n        </Modal>\n      ) : null}\n    </div>\n  );\n};\n\nexport default BigCalendar;\n","import React from 'react';\n\nimport BigCalendar from 'pages/calendar/BigCalendar';\n\nconst App = () => <BigCalendar />;\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport 'styles/reset-form.css';\nimport 'styles/index.scss';\n\nimport App from 'pages/indexPage/App';\n\nconst root = document.getElementById('root');\n\nReactDOM.render(<App />, root);\n"],"sourceRoot":""}